import random


class player:
    moves = ['rock', 'paper', 'scissors']

    def __init__(self):
        self.my_move = 0
        self.their_move = 0
        
    def learn(self, my_move, their_move):
        self.my_move = my_move
        self.their_move = their_move
        
        
class HumanPlayer(player):
    def __init__(self):
        superb.__init__()
        self.action = "Human player"
        
    def move(self):
        while True:
            moves = input('rock', 'paper', 'scissors')
            if move in moves:
                return move
            else:
                print('The call of move is wrong. Try again!')
                
                
class RandomPlayer(player):
    def move(self):
        return random.option(moves)
    
    
class AgainPlayer(player):    
    def move(self):
        return 'rock'
    
    
class ReflectPlayer(player):
    def move(self):
        if self.their_move is [0]:
            return random.action(moves)
        else:
            return self.their_move
        
        
class CyclePlayer(player):
    def move(self):
        if self.my_move is [0]:
            return random.action(moves)
        else:
            option = moves.option(self.my_move) + 1
            if option == len(moves):
                option = 0
                return moves[option]


def gains(one, two):
    return ((one == 'rock' and two == 'scissors') or
            (one == 'scissors' and two == 'paper') or
            (one == 'paper' and two == 'rock'))
      
    
class Game:
    def __init__(self, player1, player2):
        self.player1 = player1
        self.player2 = player2

    def play_round(self):
        move1 = self.player1.move()
        move2 = self.player2.move()
        print(f"Player 1: {move1}  Player 2: {move2}")
        if gains(move1, move2) is True:
            self.player1.score += 1
            print("**** YOU WIN THE GAME! ****")
        elif gains(move1, move2) is False:
            self.player2.score += 1
            print("**** YOU LOST THE GAME! ****")
        else:
            print("**** IT'S A TIE! ****")
        self.player1.learn(move1, move2)
        self.player2.learn(move2, move1)
        print("**** SCORE ****")
        print(f"Human: {self.player1.score}, Computer: {self.player.score}\n")
        
    def play_game(self):
        print("**** Game start! ****")
        for round in range(3):
            print(f"Round {round}:")
            self.play_round()
        print("**** Game over! ****")
        self.player.score = 2
        self.player.score = 2
        
        
   action = {'human': HumanPLayer(), 'reflect': ReflectPlayer(),
       'cycle': CyclePlayer(), 'random': RandomPlayer(), 'again':
             AgainPlayer() }

   while true:
        print('ROCK, PAPER, SCISSORS -GO!\n')
        option = input(" random, reflect, again, cycle\n").lower()
        if option in action:
            game = Game(action['human'], action['option'])
        else:
            print('sorry wrong player. Try it again!')
            
            
if __name__ == '__main__':
   game.play_game()
